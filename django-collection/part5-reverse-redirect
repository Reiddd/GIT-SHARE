<html>
<head>
	<style>
		div.white{
			background-color: white;
			color: black;
			margin: 20px;
			padding: 20px;
		}
		div.black{
			background-color: black;
			color: white;
			margin: 20px;
			padding: 20px;
		}
		span.bold{
			color: red;
			font-size: 150%;
		}
	</style>
</head>

<body>
	<h1 style="text-align:center">part-5: reverse and redirect</h1>
	
	<div class="white">
		<h2>1. edit the views</h2>
		<p><b>file :&nbsp</b>home/Documents/py-eg/django-collection/django-eg/mysite/polls/views.py</p>
		<blockquote><pre><code>
			<b># edit the file like this:</b>
			
			......
			from django.urls import reverse
			from django.http import HttpResponseRedirect
			......
			
			......
			def vote(request, question_id):
				question = get_object_or_404(Question, pk = question_id)
				try:
					selected_choice = question.choice_set.get(pk = request.POST['choice'])
					
				except (KeyError, Choice.DoesNotExist):
					context = {
						'question': question,
						'error_message': "You didn't select a choice."
					}
					return render(request, 'polls/detail.html', context)
					
				else:
					selected_choice.votes += 1
					selected_choice.save()
					return HttpREsponseREdirect(reverse('polls:results', args = (question_id, )))
					<b># reverse('app:url_name', args=(arg1, arg2)),
					  reverse is usually used with HttpResponseRedirect</b>
			......
		</code></pre></blockquote>
	</div>
	
	<div class="black">
		<h2>2. edit the template 'detail'</h2>
		<p><b>file :&nbsp</b>home/Documents/py-eg/django-collection/django-eg/mysite/polls/templates/polls/detail.html</p>
		<blockquote><pre><code>
			<b># write the file like this:</b>
			
			<b># url 'polls:results' question_id, here is ':'.</b>
			
			&lth1&gt{{question.question_text}}&lt/h1&gt
			
			{% if error_message %}&ltp&gt&ltstrong&gt{{error_message}}&lt/strong&gt&lt/p&gt{% endif %}
			
			&ltform action="{% url 'polls:vote' question.id %}" method="POST"&gt
				{% csrf_token %}
				<b># csrk_token is generated in every form</b>
				
				{% for choice in question.choice_set.all %}
					&ltinput type="radio" name="choice" id="choice{{forloop.counter}}" value="{{choice.id}}"&gt&lt/input&gt
					<b># forloop.counter</b>
					&ltlabel for="choice{{forloop.counter}}"&gt{{choice.choice_text}}&lt/label&gt
					&ltbr/&gt
				{% endfor %}
				
				&ltinput type="submit" value="Vote"&gt&lt/input&gt
			&lt/form&gt
		</code></pre></blockquote>
	</div>
	
	<div class="white">
	<h2>3. edit the view</h2>
	<p><b>file :&nbsp</b>home/Documents/py-eg/django-collection/django-eg/mysite/polls/views.py</p>
	<blockquote><pre><code>
		<b># edit the file like this:</b>
		
		def results(request, question_id):
			question = get_object_or_404(Question, pk = question_id)
			context = {
				'question': question
			}
			return render(request, 'polls/results.html', context)
	</code></pre></blockquote>
	</div>
	
	<div class="black">
	<h2>4. create the template results</h2>
	<p><b>file :&nbsp</b>home/Documents/py-eg/django-collection/django-eg/mysite/polls/templates/polls/results.html</p>
	<blockquote><pre><code>
		<b># write the file like this:</b>
		
		&lth1&gt{{question.question_text}}&lt/h1&gt
		
		&ltul&gt
			{% for choice in question.choice_set.all %}
				&ltli&gt{{choice.choice_text}}--{{choice.votes}} vote{{choice.votes|pluralize}}&lt/li&gt
				<b># cherr{{cherries_nums|pluralize"y,ies"}}</b>
			{% endfor %}
		&lt/ul&gt
		
		&lta href="{% url 'polls:detail' question.id %}"&gtvote again?&lt/a&gt
	</code></pre></blockquote>
	</div>
</body>
</html>

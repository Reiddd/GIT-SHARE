# !~/Documents/shell_scripts/branching_with_if
# an example of if senctence in shell scripts

echo -e "enter an integer:\n"
read x

if [ $x -eq 5 ];then
	echo "x equals 5.
	"
else
	echo "x does not equal 5.
	"
fi

# shell version:
#     if [ $x -eq 5 ];then echo "x equals 5";else echo "x does not equals 5";fi
# notice those ';'

# -------

if [ $x -ne 6 ];then
	echo "x doesn't equal 6.
	"
else
	echo "x equals 6.
	"
fi

# -------

if [ $x -lt 6 -a $x -gt 4 ];then                            # -a  and
	echo "x is less then 6 and greater than 4.
	"
fi

if [ $x -lt 4 -o $x -gt 3 ];then                            # -o  or
	echo "x is less than 4 or greater than 3.
	"
fi

if [ $x -eq 5 -a ! $x -gt 6 ];then                          # !  not
	echo "x is not greater than 6 and x equals 5.
	"
fi

echo "--------------
"


# --------------
# --------------


FILE1=~/Documents
FILE2=~/Documents/shell_scripts/basic-install-skils
FILE3=~/Documents/shell_scripts/ip-eg
FILE4=/root

if [ -e "$FILE1" ];then                                     # -e  exist
	echo "[$FILE1] exists.
	"
else
	echo "[$FILE1] doesn't exist.
	"
fi

# -------

if [ -d "$FILE1" ];then                                     # -d  exist && directory
	echo "[$FILE1] is a directory.
	"
else
	echo "[$FILE1] is not a directory.
	"
fi

# -------

if [ $FILE2 -nt $FILE3 ];then                               # -nt  exist && newer than
	echo "[$FILE2] is newer than [$FILE3].
	"
else
	echo "[$FILE2] is not newer than [$FILE3].
	"
fi

# -------

if [ $FILE3 -ot $FILE2 ];then                               # -ot  exist && older than
	echo "[$FILE3] is older than [$FILE2].
	"
else
	echo "[$FILE3] is not older than [$FILE2].
	"
fi

# -------

if [ -r $FILE4 ];then                                       # -r  exist && readable
	echo "[$FILE4] is readable by current user: $USER.
	"
else
	echo "[$FILE4] is not readable by current user: $USER.
	"
fi

# -------

if [ -w $FILE4 ];then                                       # -w  exist && writable
	echo "[$FILE4] is writable by current user: $USER.
	"
else
	echo "[$FILE4] is not writable by current user: $USER.
	"
fi

# -------

if [ -x $FILE2 ];then                                       # -x  exist && executable
	echo "[$FILE2] is executable by current user: $USER.
	"
else
	echo "[$FILE2] is not executable by current user: $USER.
	"
fi

echo "--------------
"

# --------------
# --------------


STRING1="abcefg"
STRING2=""

if [ -n $STRING1 ];then                                     # -n  not empty string
	echo "STRING1 is not empty, STRING1 == \"$STRING1\"
	"
else
	echo "STRING1 is empty.
	"
fi

if [ -z $STRING2 ];then                                     # -z  empty string
	echo "STRING2 is empty.
	";
else
	echo "STRING2 is not empty, STRING2 == \"$STRING2\"
	"
fi


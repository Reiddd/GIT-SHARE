#include <QObject>
#include <QDebug>
#include <QCoreApplication>

class Newspaper:public QObject /*only class inherited from QObject has signal component*/
{
	Q_OBJECT/*always put it in subclass*/

public:
	Newspaper(const QString& name):m_name(name){}

	void send()
	{
		emit newPaper(m_name); /*emit means send, it's like a broadcast,
                                         anyone who is interested could receive the signal*/
	}

signals:/*signals are function names, they always return void*/
	void newPaper(const QString& name); /*QString name would be sent to receiver function*/

private:
	QString m_name;
};

class Reader:public QObject /*receiver also needs to be inherited from QObject*/
{
	Q_OBJECT

public:
	Reader(){}

	void receiveNewspaper(const QString& name)
	{
		qDebug()<<"Receives Newspaper:"<<name;
	}
};

int main(int argc,char *argv[])
{
	QCoreApplication app(argc,argv);
	Newspaper newspaper("newspaper A");
	Reader reader;
	QObject::connect(&newspaper,&Newspaper::newPaper,&reader,&Reader::receiveNewspaper);
	newspaper.send();

	return app.exec();
}

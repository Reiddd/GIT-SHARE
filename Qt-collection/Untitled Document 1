/*
the [QQmlExtensionPlugin] class provides an abstract base for custom QML extension plugins.

QQmlExtensionPlugin is a plugin interface that makes it possible to create QML extensions that can be loaded dynamically into QML applications. These extensions allow custom QML types to be made available to the QML engine.

-------

here is the procedure of writing a QML extension plugin:
    1. subclass [QQmlExtensionPlugin]
    2. write a [project(.pro)] file for the plugin
    3. create a [qmldir] file to describe the plugin
    
-------

[QQmlExtensionInterface_iid] provide an id for the plugin to be registered into the QML engine, so this sentence below should be writen in the subclass:

Q_PLUGIN_METADATA(IID QQmlExtensionInterface_iid)

-------

void registerType(const char* uri){ qmlRegisterType<className>(uri,version_major,version_sub,typeName); }

this sentence should be written in the subclass
*/

class TextBalloonPlugin:public QQmlExtensionPlugin
{
    Q_OBJECT
    Q_PLUGIN_METADATA(IID QQmlExtensionInterface_iid)
    
public:
    void registerType(const char* uri)
    {
        qmlRegisterType<TextBalloon>(uri,1,0,"TextBalloon");
    }
};
